services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: voiceappoint
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    networks:
      - voiceappoint-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - voiceappoint-network
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
      target: development
    command: >
      sh -c "poetry run python manage.py runserver 0.0.0.0:8000 --skip-checks"
    volumes:
      - ./backend:/app
      - backend_static:/app/static
      - backend_media:/app/media
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - voiceappoint-network
    environment:
      - DEBUG=1
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/voiceappoint
      - REDIS_URL=redis://redis:6379/0
      - LANGUAGE_CODE=es
      - LANGUAGES=es,en
      - USE_I18N=True
      - USE_L10N=True
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    command: pnpm dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    ports:
      - "3000:3000"
    networks:
      - voiceappoint-network
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_DEFAULT_LOCALE=es
      - NEXT_PUBLIC_SUPPORTED_LOCALES=es,en
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - backend

  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    command: celery -A core worker -l info
    volumes:
      - ./backend:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - voiceappoint-network
    environment:
      - DEBUG=1
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/voiceappoint
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - backend_static:/var/www/static
      - backend_media:/var/www/media
    depends_on:
      - frontend
      - backend
    networks:
      - voiceappoint-network

volumes:
  postgres_data:
  redis_data:
  backend_static:
  backend_media:

networks:
  voiceappoint-network:
    driver: bridge
